[Problem 12](http://projecteuler.net/index.php?section=problems&id=12)

What is the value of the first triangle number to have over five hundred 
divisors?

> module Problem12 where
> import Lib.Primes
> import Lib.Lizt
> import Lib.Numz

Triangle Numbers
----------------

sequence [A000217](http://www.research.att.com/~njas/sequences/A000217)
The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7^(th) triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 

> tris :: [Integer]
> tris = map (\x -> div (x*(x+1)) 2) nats
                
The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
                 
> testtris = (take 10 tris) == [1,3,6,10,15,21,28,36,45,55]

We can see that 28 is the first triangle number to have over five divisors.

> fstTriWithDivsNumbering :: Int -> Integer
> fstTriWithDivsNumbering n = fstMatch (\x -> length(divisors x) > n) tris

> testHghCompositTri = fstTriWithDivsNumbering 5 == 28

> answer = fstTriWithDivsNumbering 500   

> testProblem012 = answer == 76576500

this method does not complete under a minute